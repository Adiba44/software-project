{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/c/[user]/layout.tsx"],"sourcesContent":["\"use client\";\r\nimport { Dispatch, SetStateAction, useEffect, useMemo } from \"react\";\r\nimport useGlobalContext from \"../GlobalContext\";\r\nimport { convertFirstLetterInUppercase } from \"@/utils/text-formater\";\r\n\r\nexport default function Layout({\r\n  children,\r\n  params,\r\n}: {\r\n  children: React.ReactNode;\r\n  params: { user: string };\r\n}) {\r\n  const { setActiveTab } = useGlobalContext();\r\n  const tabType = params.user;\r\n\r\n  return useMemo(\r\n    () => (\r\n      <_Layout\r\n        children={children}\r\n        tabType={tabType}\r\n        setActiveTab={setActiveTab}\r\n      />\r\n    ),\r\n    [tabType, setActiveTab]\r\n  );\r\n}\r\n\r\nfunction _Layout({\r\n  children,\r\n  tabType,\r\n  setActiveTab,\r\n}: {\r\n  children: React.ReactNode;\r\n  tabType: string;\r\n  setActiveTab: Dispatch<SetStateAction<string>>;\r\n}) {\r\n  useEffect(() => {\r\n    document.title = convertFirstLetterInUppercase(tabType);\r\n    setActiveTab(tabType);\r\n  }, [setActiveTab]);\r\n\r\n  return <>{children}</>;\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AAKe,SAAS,OAAO,EAC7B,QAAQ,EACR,MAAM,EAIP;;IACC,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,UAAgB,AAAD;IACxC,MAAM,UAAU,OAAO,IAAI;IAE3B,OAAO,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD,EACX,kBACE,6LAAC;YACC,UAAU;YACV,SAAS;YACT,cAAc;;;;;kBAGlB;QAAC;QAAS;KAAa;AAE3B;GApBwB;;QAOG,oIAAA,CAAA,UAAgB;;;KAPnB;AAsBxB,SAAS,QAAQ,EACf,QAAQ,EACR,OAAO,EACP,YAAY,EAKb;;IACC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS,KAAK,GAAG,CAAA,GAAA,mIAAA,CAAA,gCAA6B,AAAD,EAAE;QAC/C,aAAa;IACf,GAAG;QAAC;KAAa;IAEjB,qBAAO;kBAAG;;AACZ;IAfS"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}